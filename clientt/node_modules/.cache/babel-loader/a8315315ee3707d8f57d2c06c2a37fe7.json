{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/blogify/client/src/components/AddPostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FileBase64 from \"react-file-base64\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Input, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { createPost } from \"../actions/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2)\n  },\n  textField: {\n    marginBottom: theme.spacing(2)\n  }\n}));\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\nconst postSchema = yup.object().shape({\n  title: yup.string().required(),\n  subtitle: yup.string().required(),\n  content: yup.string().min(20).required(),\n  tag: yup.mixed().oneOf(tags)\n});\n\nconst AddPostForm = _ref => {\n  _s();\n\n  let {\n    open,\n    handleClose\n  } = _ref;\n  const dispatch = useDispatch();\n  const [file, setFile] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    control,\n    errors,\n    reset\n  } = useForm({\n    resolver: yupResolver(postSchema)\n  });\n\n  const onSubmit = data => {\n    console.log({ ...data,\n      file\n    });\n    dispatch(createPost({ ...data,\n      image: file\n    }));\n    clearForm();\n  };\n\n  const clearForm = () => {\n    reset();\n    setFile(null);\n    handleClose();\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Create a new post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"title\",\n            label: \"Title\",\n            name: \"title\",\n            variant: \"outlined\",\n            className: classes.textField,\n            size: \"small\",\n            inputRef: register,\n            error: errors.title ? true : false,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"subtitle\",\n            label: \"Subtitle\",\n            name: \"subtitle\",\n            variant: \"outlined\",\n            className: classes.textField,\n            size: \"small\",\n            inputRef: register,\n            error: errors.subtitle ? true : false,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            as: /*#__PURE__*/_jsxDEV(Select, {\n              input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 26\n              }, this),\n              className: classes.textField,\n              fullWidth: true,\n              children: tags.map((tag, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: tag,\n                children: tag\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this),\n            name: \"tag\",\n            control: control,\n            error: errors.tag ? true : false,\n            defaultValue: tags[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"content\",\n            label: \"Content\",\n            name: \"content\",\n            variant: \"outlined\",\n            multiline: true,\n            rows: 4,\n            className: classes.textField,\n            size: \"small\",\n            inputRef: register,\n            error: errors.content ? true : false,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FileBase64, {\n            multiple: false,\n            onDone: _ref2 => {\n              let {\n                base64\n              } = _ref2;\n              return setFile(base64);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        onClick: clearForm,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => handleSubmit(onSubmit)(),\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPostForm, \"8EvKyieF0vg1uTN9qsT0BqeUBXE=\", false, function () {\n  return [useDispatch, useForm, useStyles];\n});\n\n_c = AddPostForm;\nexport default AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"names":["React","useState","FileBase64","makeStyles","useForm","Controller","yupResolver","yup","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Input","MenuItem","Select","TextField","useDispatch","createPost","useStyles","theme","paper","padding","spacing","textField","marginBottom","tags","postSchema","object","shape","title","string","required","subtitle","content","min","tag","mixed","oneOf","AddPostForm","open","handleClose","dispatch","file","setFile","register","handleSubmit","control","errors","reset","resolver","onSubmit","data","console","log","image","clearForm","classes","root","map","index","base64"],"sources":["/home/user/Desktop/blogify/client/src/components/AddPostForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport FileBase64 from \"react-file-base64\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Input,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { createPost } from \"../actions/post\" \n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  textField: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\n\nconst postSchema = yup.object().shape({\n  title: yup.string().required(),\n  subtitle: yup.string().required(),\n  content: yup.string().min(20).required(),\n  tag: yup.mixed().oneOf(tags),\n});\n\nconst AddPostForm = ({ open, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const [file, setFile] = useState(null);\n\n  const { register, handleSubmit, control, errors, reset } = useForm({\n    resolver: yupResolver(postSchema),\n  });\n\n  const onSubmit = (data) => {\n  console.log({...data, file});\n    dispatch(createPost({ ...data, image: file }));\n    clearForm();\n  };\n\n  const clearForm = () => {\n    reset();\n    setFile(null);\n    handleClose();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Create a new post</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To subscribe to this website, please enter your email address here. We\n          will send updates occasionally.\n        </DialogContentText>\n\n        <div className={classes.root}>\n          <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n            <TextField\n              id=\"title\"\n              label=\"Title\"\n              name=\"title\"\n              variant=\"outlined\"\n              className={classes.textField}\n              size=\"small\"\n              inputRef={register}\n              error={errors.title ? true : false}\n              fullWidth\n            />\n            <TextField\n              id=\"subtitle\"\n              label=\"Subtitle\"\n              name=\"subtitle\"\n              variant=\"outlined\"\n              className={classes.textField}\n              size=\"small\"\n              inputRef={register}\n              error={errors.subtitle ? true : false}\n              fullWidth\n            />\n\n            <Controller\n              as={\n                <Select\n                  input={<Input />}\n                  className={classes.textField}\n                  fullWidth\n                >\n                  {tags.map((tag, index) => (\n                    <MenuItem key={index} value={tag}>\n                      {tag}\n                    </MenuItem>\n                  ))}\n                </Select>\n              }\n              name=\"tag\"\n              control={control}\n              error={errors.tag ? true : false}\n              defaultValue={tags[0]}\n            />\n            <TextField\n              id=\"content\"\n              label=\"Content\"\n              name=\"content\"\n              variant=\"outlined\"\n              multiline\n              rows={4}\n              className={classes.textField}\n              size=\"small\"\n              inputRef={register}\n              error={errors.content ? true : false}\n              fullWidth\n            />\n            <FileBase64\n              multiple={false}\n              onDone={({ base64 }) => setFile(base64)}\n            />\n          </form>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"inherit\" onClick={clearForm}>\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => handleSubmit(onSubmit)()}\n        >\n          Publish\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddPostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
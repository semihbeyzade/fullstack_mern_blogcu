{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/blogify/client/src/components/EditPostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FileBase64 from \"react-file-base64\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Select, Input, MenuItem, Button } from \"@material-ui/core\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n/* import { updatePost } from \"../actions/post\"; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginBottom: theme.spacing(2)\n  },\n  buttons: {\n    marginTop: theme.spacing(2)\n  }\n}));\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\nconst postSchema = yup.object().shape({\n  title: yup.string().required(),\n  subtitle: yup.string().required(),\n  content: yup.string().min(20).required(),\n  tag: yup.mixed().oneOf(tags)\n});\n\nconst EditPostForm = _ref => {\n  _s();\n\n  let {\n    history,\n    post,\n    closeEditMode\n  } = _ref;\n  const dispatch = useDispatch();\n  const [file, setFile] = useState(post === null || post === void 0 ? void 0 : post.image);\n  const {\n    register,\n    handleSubmit,\n    control,\n    errors,\n    reset\n  } = useForm({\n    resolver: yupResolver(postSchema)\n  });\n\n  const onSubmit = data => {\n    const updatedPost = {\n      _id: post._id,\n      ...data,\n      image: file\n    };\n    dispatch(updatePost(post._id, updatedPost));\n    reset();\n    setFile(null);\n    closeEditMode();\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"title\",\n        label: \"Title\",\n        name: \"title\",\n        variant: \"outlined\",\n        className: classes.textField,\n        size: \"small\",\n        inputRef: register,\n        error: errors.title ? true : false,\n        fullWidth: true,\n        defaultValue: post === null || post === void 0 ? void 0 : post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"subtitle\",\n        label: \"Subtitle\",\n        name: \"subtitle\",\n        variant: \"outlined\",\n        className: classes.textField,\n        size: \"small\",\n        inputRef: register,\n        error: errors.subtitle ? true : false,\n        fullWidth: true,\n        defaultValue: post === null || post === void 0 ? void 0 : post.subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        as: /*#__PURE__*/_jsxDEV(Select, {\n          input: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 28\n          }, this),\n          className: classes.textField,\n          children: tags.map((tag, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: tag,\n            children: tag\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this),\n        name: \"tag\",\n        control: control,\n        error: errors.tag ? true : false,\n        defaultValue: post === null || post === void 0 ? void 0 : post.tag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"content\",\n        label: \"Content\",\n        name: \"content\",\n        multiline: true,\n        size: \"small\",\n        inputRef: register,\n        rows: 4,\n        className: classes.textField,\n        variant: \"outlined\",\n        error: errors.content ? true : false,\n        fullWidth: true,\n        defaultValue: post === null || post === void 0 ? void 0 : post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FileBase64, {\n        multiple: false,\n        onDone: _ref2 => {\n          let {\n            base64\n          } = _ref2;\n          return setFile(base64);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttons,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"outlined\",\n          onClick: closeEditMode,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"outlined\",\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPostForm, \"9RI6Mi9SUmfIXypiZYFoYISOPu0=\", false, function () {\n  return [useDispatch, useForm, useStyles];\n});\n\n_c = EditPostForm;\nexport default EditPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPostForm\");","map":{"version":3,"names":["React","useState","FileBase64","useDispatch","makeStyles","TextField","Select","Input","MenuItem","Button","useForm","Controller","yupResolver","yup","useStyles","theme","textField","marginBottom","spacing","buttons","marginTop","tags","postSchema","object","shape","title","string","required","subtitle","content","min","tag","mixed","oneOf","EditPostForm","history","post","closeEditMode","dispatch","file","setFile","image","register","handleSubmit","control","errors","reset","resolver","onSubmit","data","updatedPost","_id","updatePost","classes","map","index","base64"],"sources":["/home/user/Desktop/blogify/client/src/components/EditPostForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport FileBase64 from \"react-file-base64\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Select, Input, MenuItem, Button } from \"@material-ui/core\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n/* import { updatePost } from \"../actions/post\"; */\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    marginBottom: theme.spacing(2),\n  },\n  buttons: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\n\nconst postSchema = yup.object().shape({\n  title: yup.string().required(),\n  subtitle: yup.string().required(),\n  content: yup.string().min(20).required(),\n  tag: yup.mixed().oneOf(tags),\n});\n\nconst EditPostForm = ({ history, post, closeEditMode }) => {\n  const dispatch = useDispatch();\n\n  const [file, setFile] = useState(post?.image);\n  const { register, handleSubmit, control, errors, reset } = useForm({\n    resolver: yupResolver(postSchema),\n  });\n\n  const onSubmit = (data) => {\n    const updatedPost = {\n      _id: post._id,\n      ...data,\n      image: file,\n    };\n    dispatch(updatePost(post._id, updatedPost));\n\n    reset();\n    setFile(null);\n    closeEditMode();\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n        <TextField\n          id=\"title\"\n          label=\"Title\"\n          name=\"title\"\n          variant=\"outlined\"\n          className={classes.textField}\n          size=\"small\"\n          inputRef={register}\n          error={errors.title ? true : false}\n          fullWidth\n          defaultValue={post?.title}\n        />\n        <TextField\n          id=\"subtitle\"\n          label=\"Subtitle\"\n          name=\"subtitle\"\n          variant=\"outlined\"\n          className={classes.textField}\n          size=\"small\"\n          inputRef={register}\n          error={errors.subtitle ? true : false}\n          fullWidth\n          defaultValue={post?.subtitle}\n        />\n        <Controller\n          as={\n            <Select input={<Input />} className={classes.textField}>\n              {tags.map((tag, index) => (\n                <MenuItem key={index} value={tag}>\n                  {tag}\n                </MenuItem>\n              ))}\n            </Select>\n          }\n          name=\"tag\"\n          control={control}\n          error={errors.tag ? true : false}\n          defaultValue={post?.tag}\n        />\n        <TextField\n          id=\"content\"\n          label=\"Content\"\n          name=\"content\"\n          multiline\n          size=\"small\"\n          inputRef={register}\n          rows={4}\n          className={classes.textField}\n          variant=\"outlined\"\n          error={errors.content ? true : false}\n          fullWidth\n          defaultValue={post?.content}\n        />\n        <FileBase64 multiple={false} onDone={({ base64 }) => setFile(base64)} />\n        <div className={classes.buttons}>\n          <Button color=\"primary\" variant=\"outlined\" onClick={closeEditMode}>\n            Cancel\n          </Button>{\" \"}\n          <Button color=\"secondary\" variant=\"outlined\" type=\"submit\">\n            Save\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default EditPostForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,QAAnC,EAA6CC,MAA7C,QAA2D,mBAA3D;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA;;;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;EACvCC,SAAS,EAAE;IACTC,YAAY,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;EADL,CAD4B;EAIvCC,OAAO,EAAE;IACPC,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd;EADJ;AAJ8B,CAAZ,CAAD,CAA5B;AASA,MAAMG,IAAI,GAAG,CAAC,KAAD,EAAQ,aAAR,EAAuB,QAAvB,EAAiC,SAAjC,CAAb;AAEA,MAAMC,UAAU,GAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;EACpCC,KAAK,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,EAD6B;EAEpCC,QAAQ,EAAEf,GAAG,CAACa,MAAJ,GAAaC,QAAb,EAF0B;EAGpCE,OAAO,EAAEhB,GAAG,CAACa,MAAJ,GAAaI,GAAb,CAAiB,EAAjB,EAAqBH,QAArB,EAH2B;EAIpCI,GAAG,EAAElB,GAAG,CAACmB,KAAJ,GAAYC,KAAZ,CAAkBZ,IAAlB;AAJ+B,CAAnB,CAAnB;;AAOA,MAAMa,YAAY,GAAG,QAAsC;EAAA;;EAAA,IAArC;IAAEC,OAAF;IAAWC,IAAX;IAAiBC;EAAjB,CAAqC;EACzD,MAAMC,QAAQ,GAAGnC,WAAW,EAA5B;EAEA,MAAM,CAACoC,IAAD,EAAOC,OAAP,IAAkBvC,QAAQ,CAACmC,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEK,KAAP,CAAhC;EACA,MAAM;IAAEC,QAAF;IAAYC,YAAZ;IAA0BC,OAA1B;IAAmCC,MAAnC;IAA2CC;EAA3C,IAAqDpC,OAAO,CAAC;IACjEqC,QAAQ,EAAEnC,WAAW,CAACU,UAAD;EAD4C,CAAD,CAAlE;;EAIA,MAAM0B,QAAQ,GAAIC,IAAD,IAAU;IACzB,MAAMC,WAAW,GAAG;MAClBC,GAAG,EAAEf,IAAI,CAACe,GADQ;MAElB,GAAGF,IAFe;MAGlBR,KAAK,EAAEF;IAHW,CAApB;IAKAD,QAAQ,CAACc,UAAU,CAAChB,IAAI,CAACe,GAAN,EAAWD,WAAX,CAAX,CAAR;IAEAJ,KAAK;IACLN,OAAO,CAAC,IAAD,CAAP;IACAH,aAAa;EACd,CAXD;;EAaA,MAAMgB,OAAO,GAAGvC,SAAS,EAAzB;EACA,oBACE;IAAA,uBACE;MAAM,UAAU,MAAhB;MAAiB,YAAY,EAAC,KAA9B;MAAoC,QAAQ,EAAE6B,YAAY,CAACK,QAAD,CAA1D;MAAA,wBACE,QAAC,SAAD;QACE,EAAE,EAAC,OADL;QAEE,KAAK,EAAC,OAFR;QAGE,IAAI,EAAC,OAHP;QAIE,OAAO,EAAC,UAJV;QAKE,SAAS,EAAEK,OAAO,CAACrC,SALrB;QAME,IAAI,EAAC,OANP;QAOE,QAAQ,EAAE0B,QAPZ;QAQE,KAAK,EAAEG,MAAM,CAACpB,KAAP,GAAe,IAAf,GAAsB,KAR/B;QASE,SAAS,MATX;QAUE,YAAY,EAAEW,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEX;MAVtB;QAAA;QAAA;QAAA;MAAA,QADF,eAaE,QAAC,SAAD;QACE,EAAE,EAAC,UADL;QAEE,KAAK,EAAC,UAFR;QAGE,IAAI,EAAC,UAHP;QAIE,OAAO,EAAC,UAJV;QAKE,SAAS,EAAE4B,OAAO,CAACrC,SALrB;QAME,IAAI,EAAC,OANP;QAOE,QAAQ,EAAE0B,QAPZ;QAQE,KAAK,EAAEG,MAAM,CAACjB,QAAP,GAAkB,IAAlB,GAAyB,KARlC;QASE,SAAS,MATX;QAUE,YAAY,EAAEQ,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAER;MAVtB;QAAA;QAAA;QAAA;MAAA,QAbF,eAyBE,QAAC,UAAD;QACE,EAAE,eACA,QAAC,MAAD;UAAQ,KAAK,eAAE,QAAC,KAAD;YAAA;YAAA;YAAA;UAAA,QAAf;UAA0B,SAAS,EAAEyB,OAAO,CAACrC,SAA7C;UAAA,UACGK,IAAI,CAACiC,GAAL,CAAS,CAACvB,GAAD,EAAMwB,KAAN,kBACR,QAAC,QAAD;YAAsB,KAAK,EAAExB,GAA7B;YAAA,UACGA;UADH,GAAewB,KAAf;YAAA;YAAA;YAAA;UAAA,QADD;QADH;UAAA;UAAA;UAAA;QAAA,QAFJ;QAUE,IAAI,EAAC,KAVP;QAWE,OAAO,EAAEX,OAXX;QAYE,KAAK,EAAEC,MAAM,CAACd,GAAP,GAAa,IAAb,GAAoB,KAZ7B;QAaE,YAAY,EAAEK,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEL;MAbtB;QAAA;QAAA;QAAA;MAAA,QAzBF,eAwCE,QAAC,SAAD;QACE,EAAE,EAAC,SADL;QAEE,KAAK,EAAC,SAFR;QAGE,IAAI,EAAC,SAHP;QAIE,SAAS,MAJX;QAKE,IAAI,EAAC,OALP;QAME,QAAQ,EAAEW,QANZ;QAOE,IAAI,EAAE,CAPR;QAQE,SAAS,EAAEW,OAAO,CAACrC,SARrB;QASE,OAAO,EAAC,UATV;QAUE,KAAK,EAAE6B,MAAM,CAAChB,OAAP,GAAiB,IAAjB,GAAwB,KAVjC;QAWE,SAAS,MAXX;QAYE,YAAY,EAAEO,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEP;MAZtB;QAAA;QAAA;QAAA;MAAA,QAxCF,eAsDE,QAAC,UAAD;QAAY,QAAQ,EAAE,KAAtB;QAA6B,MAAM,EAAE;UAAA,IAAC;YAAE2B;UAAF,CAAD;UAAA,OAAgBhB,OAAO,CAACgB,MAAD,CAAvB;QAAA;MAArC;QAAA;QAAA;QAAA;MAAA,QAtDF,eAuDE;QAAK,SAAS,EAAEH,OAAO,CAAClC,OAAxB;QAAA,wBACE,QAAC,MAAD;UAAQ,KAAK,EAAC,SAAd;UAAwB,OAAO,EAAC,UAAhC;UAA2C,OAAO,EAAEkB,aAApD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAGY,GAHZ,eAIE,QAAC,MAAD;UAAQ,KAAK,EAAC,WAAd;UAA0B,OAAO,EAAC,UAAlC;UAA6C,IAAI,EAAC,QAAlD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QAvDF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAoED,CA1FD;;GAAMH,Y;UACa/B,W,EAG0CO,O,EAiB3CI,S;;;KArBZoB,Y;AA4FN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as types from \"../actions/types\";\nconst initialState = {\n  posts: [],\n  currentPost: null\n};\n\nconst postReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.FETCH_POSTS:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case types.FETCH_SINGLE_POST:\n      return { ...state,\n        currentPost: action.payload\n      };\n\n    case types.CREATE_POST:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case types.CREATE_POST:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case types.DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload),\n        currentPost: null\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default postReducer;","map":{"version":3,"names":["types","initialState","posts","currentPost","postReducer","state","action","type","FETCH_POSTS","payload","FETCH_SINGLE_POST","CREATE_POST","DELETE_POST","filter","post","_id"],"sources":["/home/user/Desktop/blogify/client/src/reducers/post.js"],"sourcesContent":["import * as types from \"../actions/types\";\n\nconst initialState = {\n    posts: [],\n    currentPost: null\n}\n\nconst postReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.FETCH_POSTS:\n            return {\n                ...state,\n                posts: action.payload\n            };\n\n        case types.FETCH_SINGLE_POST:\n            return {\n                ...state,\n                currentPost: action.payload\n            };\n\n        case types.CREATE_POST:\n            return {\n                ...state,\n                posts: [...state.posts, action.payload],\n            };\n\n            case types.CREATE_POST:\n            return {\n                ...state,\n                posts: [...state.posts, action.payload],\n            }\n\n            case types.DELETE_POST:\n                return {\n                    ...state,\n                    posts: state.posts.filter(post => post._id !== action.payload),\n                    currentPost: null\n                }\n\n            default:\n              return {\n                  ...state\n              }   \n    }\n}\n\nexport default postReducer;"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,kBAAvB;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EADU;EAEjBC,WAAW,EAAE;AAFI,CAArB;;AAKA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EAClD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKP,KAAK,CAACQ,WAAX;MACI,OAAO,EACH,GAAGH,KADA;QAEHH,KAAK,EAAEI,MAAM,CAACG;MAFX,CAAP;;IAKJ,KAAKT,KAAK,CAACU,iBAAX;MACI,OAAO,EACH,GAAGL,KADA;QAEHF,WAAW,EAAEG,MAAM,CAACG;MAFjB,CAAP;;IAKJ,KAAKT,KAAK,CAACW,WAAX;MACI,OAAO,EACH,GAAGN,KADA;QAEHH,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACG,OAAxB;MAFJ,CAAP;;IAKA,KAAKT,KAAK,CAACW,WAAX;MACA,OAAO,EACH,GAAGN,KADA;QAEHH,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACG,OAAxB;MAFJ,CAAP;;IAKA,KAAKT,KAAK,CAACY,WAAX;MACI,OAAO,EACH,GAAGP,KADA;QAEHH,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYW,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAA/C,CAFJ;QAGHN,WAAW,EAAE;MAHV,CAAP;;IAMJ;MACE,OAAO,EACH,GAAGE;MADA,CAAP;EAjCV;AAqCH,CAtCD;;AAwCA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}
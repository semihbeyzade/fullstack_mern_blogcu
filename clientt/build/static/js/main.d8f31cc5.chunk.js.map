{"version":3,"sources":["images/noimage.svg","components/Post.js","images/grid_four.svg","images/grid_three.svg","components/PostsList.js","api/index.js","actions/types.js","components/AddPostForm.js","actions/post.js","components/EditPostForm.js","components/PostDetails.js","App.js","reducers/post.js","reducers/rootReducer.js","store.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","position","media","height","paddingTop","backgroundColor","backgroundBlendMode","overlay","top","left","color","chip","marginTop","spacing","Post","date","_id","title","subtitle","content","tag","image","createdAt","classes","Card","className","CardMedia","noImage","Typography","variant","moment","fromNow","CardContent","component","gutterBottom","substring","Chip","label","CardActions","Button","size","to","layoutShifter","float","margin","PostsList","posts","useSelector","state","useState","layout","setLayout","onClick","src","gridThree","style","background","alt","gridFour","Grid","container","alignContent","length","map","post","item","xs","md","apiEndpoint","fetchPosts","axios","get","fetchSinglePost","id","createPost","updatePost","updatedPost","patch","deletePost","delete","FETCH_POSTS","CREATE_POST","FETCH_SINGLE_POST","DELETE_POST","UPDATE_POST","paper","padding","textField","marginBottom","tags","postSchema","yup","shape","required","min","oneOf","AddPostForm","open","handleClose","dispatch","useDispatch","file","setFile","useForm","resolver","yupResolver","register","handleSubmit","control","errors","reset","onSubmit","data","console","log","api","type","types","payload","clearForm","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","noValidate","autoComplete","TextField","name","inputRef","error","fullWidth","as","Select","input","Input","index","MenuItem","value","defaultValue","multiline","rows","multiple","onDone","base64","DialogActions","buttons","EditPostForm","history","closeEditMode","header","display","justifyContent","width","borderRadius","PostDetails","match","location","params","currentPost","editMode","setEditMode","useEffect","Paper","elevation","startIcon","push","Divider","flexGrow","menuButton","marginRight","App","setOpen","CssBaseline","Container","AppBar","electron","Toolbar","IconButton","edge","href","exact","path","from","initialState","postReducer","action","filter","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8f31cc5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noimage.51df33d5.svg\";","import {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia,\n    Chip,\n    makeStyles,\n    Typography,\n  } from \"@material-ui/core\";\n  import moment from \"moment\";\n  import React from \"react\";\n  import { Link } from \"react-router-dom\";\n  import noImage from \"../images/noimage.svg\"\n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 374,\n      position: \"relative\",\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\", // 16:9\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      backgroundBlendMode: \"darken\",\n    },\n  \n    overlay: {\n      position: \"absolute\",\n      top: \"20px\",\n      left: \"20px\",\n      color: \"white\",\n    },\n    chip: {\n      marginTop: theme.spacing(1),\n    },\n  }));\n  \n  const Post = ({ _id, title, subtitle, content, tag, image, createdAt }) => {\n    const convertRelativeTime = (date) => {\n      return moment(date).fromNow();\n    };\n  \n    const classes = useStyles();\n  \n    return (\n      <Card className={classes.root}>\n        <CardMedia\n          className={classes.media}\n          image={image || noImage}\n          title=\"image\"\n        />\n        <div className={classes.overlay}>\n          <Typography variant=\"h6\">Semih</Typography>\n          <Typography variant=\"body2\">\n            {convertRelativeTime(createdAt)}\n          </Typography>\n        </div>\n        <CardContent>\n          <Typography variant=\"h6\" component=\"p\" gutterBottom>\n            {title.substring(0,30) + \"...\"}\n          </Typography>\n          <Typography variant=\"overline\" component=\"p\" gutterBottom>\n            {subtitle}\n          </Typography>\n          <Typography variant=\"body2\" component=\"p\" gutterBottom>\n            {content.substring(0, 180) + \"...\"}\n          </Typography>\n          <Chip label={` # ${tag}`} variant=\"outlined\" className={classes.chip} />\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            <Link to={`/posts/${_id}`}>More</Link>\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  };\n  \n  export default Post;","export default __webpack_public_path__ + \"static/media/grid_four.d897e640.svg\";","export default __webpack_public_path__ + \"static/media/grid_three.c45b945b.svg\";","import { Button, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Post from \"./Post\"; \nimport gridFour from \"../images/grid_four.svg\"\nimport gridThree from \"../images/grid_three.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  layoutShifter: {\n    float: \"right\",\n    margin: theme.spacing(2),\n  },\n}));\n\nexport const PostsList = () => {\n  const posts = useSelector((state) => state.posts.posts);\n  const [layout, setLayout] = useState(\"gridThree\");\n\n  const calculateMd = () => {\n    return layout === \"gridThree\" ? 4 : 3;\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      {/* Layout Shifter */}\n      <div className={classes.layoutShifter}>\n        <Button\n          variant=\"text\"\n          size=\"small\"\n          onClick={() => setLayout(\"gridThree\")}\n        >\n          <img\n            src={gridThree}\n            style={{ background: layout === \"gridThree\" ? \"#ccc\" : \"\" }}\n            alt=\"Three Columns Grid Icon\"\n          />\n        </Button>\n        <Button\n          variant=\"text\"\n          size=\"small\"\n          onClick={() => setLayout(\"gridFour\")}\n        >\n          <img\n            src={gridFour}\n            style={{ background: layout === \"gridFour\" ? \"#ccc\" : \"\" }}\n            alt=\"Four Columns Grid Icon\"\n          />\n        </Button>\n      </div>\n      <Grid container spacing={2} alignContent=\"stretch\">\n        {posts.length > 0 &&\n          posts.map((post) => (\n            <Grid item key={post?._id} xs={12} md={calculateMd()}>\n               <Post {...post} /> \n            </Grid>\n          ))}\n      </Grid>\n    </>\n  );\n};","import axios from \"axios\";\n\nconst apiEndpoint = \"https://blogify-backend-de.herokuapp.com/posts/\"\n\nexport const fetchPosts = async () => await axios.get(apiEndpoint);\n\nexport const fetchSinglePost = async (id) => await axios.get(`${apiEndpoint}${id}`);\n\nexport const createPost = async (post) => await axios.post(apiEndpoint, post);\n\nexport const updatePost = async (id, updatedPost) => await axios.patch(`${apiEndpoint}${id}`, updatedPost);\n\nexport const deletePost = async (id) => await axios.delete(`${apiEndpoint}${id}`);","export const FETCH_POSTS = \"FETCH_POSTS\";\nexport const CREATE_POST = \"CREATE_POST\";\nexport const FETCH_SINGLE_POST = \"FETCH_SINGLE_POST\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const UPDATE_POST = \"UPDATE_POST\";\n\n","import React, { useState } from \"react\";\nimport FileBase64 from \"react-file-base64\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Input,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { createPost } from \"../actions/post\" \n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  textField: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\n\nconst postSchema = yup.object().shape({\n  title: yup.string().required(),\n  subtitle: yup.string().required(),\n  content: yup.string().min(20).required(),\n  tag: yup.mixed().oneOf(tags),\n});\n\nconst AddPostForm = ({ open, handleClose }) => {\n  const dispatch = useDispatch();\n\n  const [file, setFile] = useState(null);\n\n  const { register, handleSubmit, control, errors, reset } = useForm({\n    resolver: yupResolver(postSchema),\n  });\n\n  const onSubmit = (data) => {\n    console.log({...data, file});\n    dispatch(createPost({ ...data, image: file }));\n    clearForm();\n  };\n\n  const clearForm = () => {\n    reset();\n    setFile(null);\n    handleClose();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Create a new post</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To subscribe to this website, please enter your email address here. We\n          will send updates occasionally.\n        </DialogContentText>\n\n        <div className={classes.root}>\n          <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n            <TextField\n              id=\"title\"\n              label=\"Title\"\n              name=\"title\"\n              variant=\"outlined\"\n              className={classes.textField}\n              size=\"small\"\n              inputRef={register}\n              error={errors.title ? true : false}\n              fullWidth\n            />\n            <TextField\n              id=\"subtitle\"\n              label=\"Subtitle\"\n              name=\"subtitle\"\n              variant=\"outlined\"\n              className={classes.textField}\n              size=\"small\"\n              inputRef={register}\n              error={errors.subtitle ? true : false}\n              fullWidth\n            />\n\n            <Controller\n              as={\n                <Select\n                  input={<Input />}\n                  className={classes.textField}\n                  fullWidth\n                >\n                  {tags.map((tag, index) => (\n                    <MenuItem key={index} value={tag}>\n                      {tag}\n                    </MenuItem>\n                  ))}\n                </Select>\n              }\n              name=\"tag\"\n              control={control}\n              error={errors.tag ? true : false}\n              defaultValue={tags[0]}\n            />\n            <TextField\n              id=\"content\"\n              label=\"Content\"\n              name=\"content\"\n              variant=\"outlined\"\n              multiline\n              rows={4}\n              className={classes.textField}\n              size=\"small\"\n              inputRef={register}\n              error={errors.content ? true : false}\n              fullWidth\n            />\n            <FileBase64\n              multiple={false}\n              onDone={({ base64 }) => setFile(base64)}\n            />\n          </form>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"inherit\" onClick={clearForm}>\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => handleSubmit(onSubmit)()}\n        >\n          Publish\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default AddPostForm;","import * as api from \"../api/index\";\nimport * as types from \"./types\";\n\nexport const fetchPosts = () => async (dispatch) => {\n  try {\n      const { data } = await api.fetchPosts();\n      dispatch({\n          type: types.FETCH_POSTS,\n          payload: data\n      })\n      \n  } catch (error) {\n      console.log(error);\n      \n  }\n}\n\nexport const fetchSinglePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.fetchSinglePost(id);\n        dispatch({\n            type: types.FETCH_SINGLE_POST,\n            payload: data\n        })\n        \n    } catch (error) {\n        console.log(error);\n        \n    }\n  }\n\nexport const createPost = (post) => async (dispatch) => {\n   try {\n       const { data } = await api.createPost(post);\n       dispatch({\n           type: types.CREATE_POST,\n           payload: data\n       })\n       \n   } catch (error) {\n       console.log(error);\n   }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post);\n        dispatch({\n            type: types.UPDATE_POST,\n            payload: data\n        })\n        \n    } catch (error) {\n        console.log(error);\n    }\n }\n \n\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.deletePost(id);\n        dispatch({\n            type: types.DELETE_POST,\n            payload: data._id\n        })\n        \n    } catch (error) {\n        console.log(error);\n    }\n }","import React, { useState } from \"react\";\nimport FileBase64 from \"react-file-base64\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Select, Input, MenuItem, Button } from \"@material-ui/core\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { updatePost } from \"../actions/post\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    marginBottom: theme.spacing(2),\n  },\n  buttons: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\n\nconst postSchema = yup.object().shape({\n  title: yup.string().required(),\n  subtitle: yup.string().required(),\n  content: yup.string().min(20).required(),\n  tag: yup.mixed().oneOf(tags),\n});\n\nconst EditPostForm = ({ history, post, closeEditMode }) => {\n  const dispatch = useDispatch();\n\n  const [file, setFile] = useState(post?.image);\n  const { register, handleSubmit, control, errors, reset } = useForm({\n    resolver: yupResolver(postSchema),\n  });\n\n  const onSubmit = (data) => {\n    const updatedPost = {\n      _id: post._id,\n      ...data,\n      image: file,\n    };\n   dispatch(updatePost(post._id, updatedPost));\n\n    reset();\n    setFile(null);\n    closeEditMode();\n  };\n\n  const classes = useStyles();\n  return (\n    <div>\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n        <TextField\n          id=\"title\"\n          label=\"Title\"\n          name=\"title\"\n          variant=\"outlined\"\n          className={classes.textField}\n          size=\"small\"\n          inputRef={register}\n          error={errors.title ? true : false}\n          fullWidth\n          defaultValue={post?.title}\n        />\n        <TextField\n          id=\"subtitle\"\n          label=\"Subtitle\"\n          name=\"subtitle\"\n          variant=\"outlined\"\n          className={classes.textField}\n          size=\"small\"\n          inputRef={register}\n          error={errors.subtitle ? true : false}\n          fullWidth\n          defaultValue={post?.subtitle}\n        />\n        <Controller\n          as={\n            <Select input={<Input />} className={classes.textField}>\n              {tags.map((tag, index) => (\n                <MenuItem key={index} value={tag}>\n                  {tag}\n                </MenuItem>\n              ))}\n            </Select>\n          }\n          name=\"tag\"\n          control={control}\n          error={errors.tag ? true : false}\n          defaultValue={post?.tag}\n        />\n        <TextField\n          id=\"content\"\n          label=\"Content\"\n          name=\"content\"\n          multiline\n          size=\"small\"\n          inputRef={register}\n          rows={4}\n          className={classes.textField}\n          variant=\"outlined\"\n          error={errors.content ? true : false}\n          fullWidth\n          defaultValue={post?.content}\n        />\n        <FileBase64 multiple={false} onDone={({ base64 }) => setFile(base64)} />\n        <div className={classes.buttons}>\n          <Button color=\"primary\" variant=\"outlined\" onClick={closeEditMode}>\n            Cancel\n          </Button>{\" \"}\n          <Button color=\"secondary\" variant=\"outlined\" type=\"submit\">\n            Save\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default EditPostForm;","import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Paper, Divider, Button, Chip } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { fetchSinglePost, deletePost } from \"../actions/post\";\nimport noImage from \"../images/noimage.svg\";\nimport EditPostForm from \"./EditPostForm\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      padding: theme.spacing(3),\n      marginBottom: theme.spacing(8),\n    },\n    header: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    content: {\n      marginTop: theme.spacing(3),\n    },\n    image: {\n      width: \"100%\",\n      borderRadius: 5,\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(4),\n    },\n    chip: {\n      marginTop: theme.spacing(1),\n    },\n  }));\n\nconst PostDetails = ({ match, history, location }) => {\n    const {id} = match.params;\n    const dispatch = useDispatch();\n\n  const currentPost = useSelector((state) => state.posts.currentPost);\n\n  const [editMode, setEditMode] = useState(false);\n\n  const openEditMode = () => {\n    setEditMode(true);\n  };\n  const closeEditMode = () => {\n    setEditMode(false);\n  };\n\n    useEffect(() => {\n        dispatch(fetchSinglePost(id));\n      }, [dispatch, id]);\n\n      const convertRelativeTime = (date) => {\n        return moment(date).fromNow();\n      };\n    \n      const removePost = () => {\n        dispatch(deletePost(currentPost._id));\n        history.push(\"/posts\");\n      };\n\n    const classes = useStyles();\n  return (\n    <Paper className={classes.paper} elevation={0}>\n    {editMode ? (\n       <EditPostForm post={currentPost} closeEditMode={closeEditMode} /> \n    ) : (\n      <div>\n        <div className={classes.header}>\n          <Typography variant=\"h5\" gutterBottom>\n            {currentPost?.title}\n          </Typography>\n          <div>\n            <Button\n              color=\"primary\"\n              variant=\"outlined\"\n              startIcon={<EditIcon />}\n              onClick={openEditMode}\n            >\n              Edit\n            </Button>{\" \"}\n            <Button\n              color=\"secondary\"\n              variant=\"outlined\"\n              onClick={removePost}\n              startIcon={<DeleteIcon />}\n            >\n              Delete\n            </Button>\n          </div>\n        </div>\n\n        <Divider />\n        <Typography variant=\"overline\" gutterBottom>\n          {currentPost?.subtitle}\n        </Typography>\n        <Typography variant=\"caption\" component=\"p\" gutterBottom>\n          {convertRelativeTime(currentPost?.createdAt)} by Semih\n        </Typography>\n        <Chip\n          label={`# ${currentPost?.tag}`}\n          variant=\"outlined\"\n          className={classes.chip}\n        />\n\n        <div className={classes.content}>\n          <img\n            src={currentPost?.image || noImage}\n            alt=\"Post\"\n            className={classes.image}\n          />\n          <Typography variant=\"body1\" gutterBottom>\n            {currentPost?.content}\n          </Typography>\n        </div>\n      </div>\n    )}\n  </Paper>\n  )\n}\n\nexport default PostDetails","import React, { useEffect, useState } from \"react\";\nimport {\n  CssBaseline,\n  Container,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  makeStyles,\n  Grid,\n} from \"@material-ui/core\";\nimport PenIcon from \"@material-ui/icons/Create\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { PostsList } from \"./components/PostsList\";\nimport AddPostForm from \"./components/AddPostForm\"\nimport { useDispatch } from \"react-redux\";\nimport { fetchPosts } from \"./actions/post\"\nimport PostDetails from \"./components/PostDetails\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n     dispatch(fetchPosts()); \n  }, [dispatch]);\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <AppBar position=\"static\" color=\"inherit\" electron={0}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.container}\n              color=\"inherit\"\n            />\n            <Typography\n              variant=\"h6\"\n              color=\"secondary\"\n              className={classes.title}\n            >\n              <a href=\"https://blogify-frontend-den.herokuapp.com/posts\">Blogcu</a>\n            </Typography>\n            <Button\n              color=\"primary\"\n              variant=\"outlined\"\n              startIcon={<PenIcon />}\n              onClick={handleOpen}\n            >\n              Add new post\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Grid container className={classes.container}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/posts\" component={PostsList} />\n              <Route exact path=\"/posts/:id\" component={PostDetails} />\n            </Switch>\n\n            <Redirect from=\"/\" to=\"/posts\" />\n          </Router>\n        </Grid>\n      </Container>\n\n      <AddPostForm open={open} handleClose={handleClose} />\n    </>\n  );\n};\n\nexport default App;","import * as types from \"../actions/types\";\n\nconst initialState = {\n    posts: [],\n    currentPost: null\n}\n\nconst postReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.FETCH_POSTS:\n            return {\n                ...state,\n                posts: action.payload\n            };\n\n        case types.FETCH_SINGLE_POST:\n            return {\n                ...state,\n                currentPost: action.payload\n            };\n\n        case types.CREATE_POST:\n            return {\n                ...state,\n                posts: [...state.posts, action.payload],\n            };\n\n            case types.UPDATE_POST:\n                return {\n                  ...state,\n                  posts: state.posts.map((post) => {\n                    if (post._id === action.payload._id) {\n                      return action.payload;\n                    } else {\n                      return post;\n                    }\n                  }),\n                  currentPost: action.payload,\n                };\n\n            case types.DELETE_POST:\n                return {\n                    ...state,\n                    posts: state.posts.filter(post => post._id !== action.payload),\n                    currentPost: null\n                }\n\n            default:\n              return {\n                  ...state\n              }   \n    }\n}\n\nexport default postReducer;","import { combineReducers } from \"redux\";\nimport postReducer from \"./post\";\n\nconst rootReducer = combineReducers({\n    posts: postReducer\n})\n\nexport default rootReducer;","import { compose, applyMiddleware, createStore } from \"redux\";\nimport thunk  from \"redux-thunk\";\n\n\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst store = createStore(rootReducer, {}, compose(\n    applyMiddleware(thunk),\n   \n));\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\"\nimport { Provider } from \"react-redux\";\nimport store from \"./store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}